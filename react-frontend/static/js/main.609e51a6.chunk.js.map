{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","selectedFile","setSelectedFile","outPutFileUrl","setOutPutFileUrl","faceRatio","setFaceRatio","loading","setLoading","select1","setSelect1","select2","setSelect2","result","setResult","fileInput","useRef","distant","x1","y1","x2","y2","Math","sqrt","pow","useEffect","undefined","Container","Card","className","Header","Body","Text","ref","type","onChange","event","target","files","style","display","Button","variant","onClick","current","click","formData","FormData","append","axios","method","url","data","then","response","listId","jpgpath","l","landmarks","key","title","value","x_27","y_27","x_33","y_33","x_8","y_8","x_36","y_36","x_39","y_39","x_42","y_42","x_45","y_45","x_0","y_0","x_16","y_16","x_48","y_48","x_54","y_54","x_51","y_51","x_57","y_57","alert","Row","Col","md","Image","fluid","src","URL","createObjectURL","Spinner","animation","length","noGutters","sm","Form","Control","as","e","Number","map","each","readOnly","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.609e51a6.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport axios from 'axios'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Image,\r\n  Row,\r\n  Spinner\r\n} from 'react-bootstrap'\r\n\r\ntype FaceRatio = {\r\n  key: string;\r\n  title: string;\r\n  value: number;\r\n};\r\n\r\nexport default function App () {\r\n  const [selectedFile, setSelectedFile] = useState<null | File>(null)\r\n  const [outPutFileUrl, setOutPutFileUrl] = useState<null | string>(null)\r\n  const [faceRatio, setFaceRatio] = useState<FaceRatio[]>([])\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n\r\n  const [select1, setSelect1] = useState<number>()\r\n  const [select2, setSelect2] = useState<number>()\r\n  const [result, setResult] = useState<number | undefined>()\r\n\r\n  const handleFilePick = (event: any) => {\r\n    setSelectedFile(event.target.files[0])\r\n    setOutPutFileUrl(null)\r\n  }\r\n\r\n  const fileInput = useRef<HTMLInputElement>(null)\r\n\r\n  const distant = (x1: number, y1: number, x2: number, y2: number) =>\r\n    Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n\r\n  const analyze = () => {\r\n    setLoading(true)\r\n    const formData = new FormData()\r\n\r\n    if (!selectedFile) {\r\n      alert('select file')\r\n      return\r\n    }\r\n\r\n    formData.append('File', selectedFile)\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: 'https://localhost:6001/api/File/upload-file',\r\n      data: formData\r\n    }).then((response) => {\r\n      axios({\r\n        method: 'post',\r\n        url: 'https://localhost:7001/FacialLandmark/analyze',\r\n        data: response.data.listId\r\n      }).then((response) => {\r\n        setOutPutFileUrl(response.data.jpgpath)\r\n        const l = response.data.landmarks\r\n        setFaceRatio([\r\n          {\r\n            key: 'noseHeight',\r\n            title: 'chiều cao mũi',\r\n            value: distant(l.x_27, l.y_27, l.x_33, l.y_33)\r\n          },\r\n          {\r\n            key: 'chinToNose',\r\n            title: 'đầu mũi đến cằm',\r\n            value: distant(l.x_8, l.y_8, l.x_33, l.y_33)\r\n          },\r\n          {\r\n            key: 'leftEyeWidth',\r\n            title: 'độ dài mắt trái',\r\n            value: distant(l.x_36, l.y_36, l.x_39, l.y_39)\r\n          },\r\n          {\r\n            key: 'rightEyeWidth',\r\n            title: 'độ dài mắt phải',\r\n            value: distant(l.x_42, l.y_42, l.x_45, l.y_45)\r\n          },\r\n          {\r\n            key: 'faceWidth',\r\n            title: 'bề rộng mặt',\r\n            value: distant(l.x_0, l.y_0, l.x_16, l.y_16)\r\n          },\r\n          {\r\n            key: 'mouthWidth',\r\n            title: 'độ rộng miệng',\r\n            value: distant(l.x_48, l.y_48, l.x_54, l.y_54)\r\n          },\r\n          {\r\n            key: 'chinToNose',\r\n            title: 'đầu mũi đến cằm',\r\n            value: distant(l.x_51, l.y_51, l.x_57, l.y_57)\r\n          }\r\n        ])\r\n\r\n        setLoading(false)\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (select1 && select2) {\r\n      setResult(select1 / select2)\r\n    } else setResult(undefined)\r\n  }, [select1, select2])\r\n\r\n  return (\r\n    <Container>\r\n      <Card className=\"mt-2\">\r\n        <Card.Header>Facial Landmark</Card.Header>\r\n        <Card.Body>\r\n          <Card.Text>\r\n            <input\r\n              ref={fileInput}\r\n              type=\"file\"\r\n              onChange={handleFilePick}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </Card.Text>\r\n          <Button variant=\"primary\" onClick={() => fileInput.current?.click()}>\r\n            Upload File\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={analyze} className=\"ml-2\">\r\n            Get Facial Landmark\r\n          </Button>\r\n\r\n          <Row className=\"mt-5\">\r\n            <Col md={6}>\r\n              {selectedFile && (\r\n                <Image fluid src={URL.createObjectURL(selectedFile) || ''} />\r\n              )}\r\n            </Col>\r\n            <Col md={6} className=\"text-center align-middle\">\r\n              {outPutFileUrl && (\r\n                <Image\r\n                  fluid\r\n                  src={\r\n                    'https://localhost:7001/FacialLandmark/output/' +\r\n                      outPutFileUrl || ''\r\n                  }\r\n                />\r\n              )}\r\n              {loading && <Spinner animation=\"border\" />}\r\n            </Col>\r\n          </Row>\r\n\r\n          {faceRatio.length > 0 && (\r\n            <Row className=\"mt-5\" noGutters={true}>\r\n              <Col sm={12} className=\"mb-2\">\r\n                Chọn 2 độ dài bất kì để xem tỉ lệ\r\n              </Col>\r\n              <Col sm={4}>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={(e) => setSelect1(Number(e.target.value))}\r\n                >\r\n                  <option></option>\r\n                  {faceRatio.map((each) => (\r\n                    <option value={each.value} key={each.key}>\r\n                      {each.title}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Col>\r\n              <Col sm={1} className=\"text-center\">\r\n                /\r\n              </Col>\r\n              <Col sm={4}>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={(e) => setSelect2(Number(e.target.value))}\r\n                >\r\n                  <option></option>\r\n                  {faceRatio.map((each) => (\r\n                    <option value={each.value} key={each.key}>\r\n                      {each.title}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Col>\r\n              <Col sm={1} className=\"text-center\">\r\n                =\r\n              </Col>\r\n              <Col sm={2}>\r\n                <Form.Control type=\"text\" readOnly value={result} />\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}